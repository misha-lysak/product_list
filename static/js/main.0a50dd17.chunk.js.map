{"version":3,"sources":["api.js","components/AddComment/AddComment.jsx","components/EditProduct/EditProduct.jsx","components/SelectedCard/SelectedCard.jsx","components/ModalWindow/ModalWindow.jsx","components/ProductList/ProductList.jsx","components/AddProduct/AddProduct.jsx","App.jsx","index.js"],"names":["url","request","options","fetch","then","response","ok","Error","json","productData","id","AddComment","productId","onAddComment","useState","open","setOpen","newComment","setNewComment","isAllInputFull","setIsAllInputFull","onChange","useCallback","event","value","target","description","Date","date","onSubmit","undefined","data","method","headers","body","JSON","stringify","createComment","Modal","onClose","onOpen","trigger","Button","Content","Form","Group","Input","text","name","type","label","placeholder","className","onClick","EditProduct","product","onEditProduct","editingProduct","setEditingProduct","prev","size","height","width","imageUrl","count","weight","editProduct","Header","image","SelectedCard","closeDescription","selectedProduct","setProduct","comments","setComments","useEffect","a","onRemove","commentId","filter","comment","handlerRemove","removeComment","Card","Image","src","alt","uniqueKey","Meta","map","Description","extra","Icon","length","edittingProduct","ModalWindow","onDelete","handleDelete","remove","Actions","color","content","labelPosition","icon","positive","ProductList","openProduct","Item","AddProduct","onAdd","newProduct","setNewProduct","uniqid","createProduct","App","productsList","setProductsList","setDescription","setSelectedProduct","sortProducts","option","sort","currItem","nextItem","localeCompare","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a50dd17.chunk.js","sourcesContent":["const url = \"https://6067460a98f405001728eaa3.mockapi.io/product-list/products\";\n\nexport const data = () => (\n  fetch(url)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`can't upload your data`);\n      }\n\n      return response.json();\n    })\n)\n\nexport const request = (url, options) => (\n  fetch(`${url}`, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`can\\n't upload your comment`);\n      }\n\n      return response.json();\n    })\n);\n\nexport const productData = (id, options) => (\n  fetch(`${url}/${id}`, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`can\\n't upload your data`);\n      }\n\n      return response.json();\n    })\n);\n\nexport const createProduct = (data) => (\n  fetch(`${url}`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      id: data.id,\n      imageUrl: data.imageUrl,\n      name: data.name,\n      count: data.count,\n      size: {\n        height: data.height,\n        width: data.width,\n      },\n      weight: `weight ${data.weight}`,\n    }),\n  })\n    .then(response => response.json())\n);\n\nexport const editProduct = (id, data) => (\n  fetch(`${url}/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  })\n);\n\nexport const createComment = (productId, data) => (\n  fetch(`${url}/${productId}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  })\n    .then(response => response.json())\n);\n\nexport const remove = id => (\n  request(`${url}/${id}`, { method: 'DELETE' })\n);\n\nexport const removeComment = (productId, id) => (\n  request(`${url}/${productId}/comments/${id}`, { method: 'DELETE' })\n);","import React, { useState, useCallback } from 'react';\nimport { Button, Modal, Form } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nimport { createComment } from '../../api'\n\n\nexport const AddComment = ({ productId, onAddComment }) => {\n  const [open, setOpen] = useState(false);\n  const [newComment, setNewComment] = useState('');\n  const [isAllInputFull, setIsAllInputFull] = useState(true);\n\n  const onChange = useCallback(\n    (event) => {\n      const { value } = event.target;\n      setIsAllInputFull(true);\n\n      setNewComment(({\n        description: value,\n        id: +new Date(),\n        productId,\n        date: +new Date(),\n      }))\n    }, []\n  )\n\n  const onSubmit = useCallback(\n    () => {\n      if (newComment.description === undefined) {\n        setIsAllInputFull(false)\n        return\n      }\n\n      createComment(productId, newComment);\n      onAddComment(newComment);\n      setNewComment('');\n      setOpen(false)\n      setIsAllInputFull(true)\n    }, [newComment, open]\n  )\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button>Add new comment</Button>}\n    >\n      <Modal.Content>\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <Form.Input\n            onChange={event => onChange(event)}\n            value={newComment.text}\n            name=\"text\"\n            type=\"text\"\n            label='Comment'\n            placeholder='Comment'\n          />\n          {!isAllInputFull && (\n            <div className=\"error\">Write some comment</div>\n          )}\n        </Form.Group>\n        <Button type='submit'>Submit</Button>\n        <Button\n          onClick={() => setOpen(false)}\n          type='reset'\n        >\n          Cancel\n        </Button>\n      </Form>\n      </Modal.Content>\n      \n    </Modal>\n  )\n}\n\nAddComment.propTypes = {\n  productId: PropTypes.string.isRequired,\n  onAddComment: PropTypes.func,\n}\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types'\nimport { editProduct } from '../../api'\n\nimport { Modal, Form, Button } from 'semantic-ui-react';\n\nexport const EditProduct = ({ product, onEditProduct }) => {\n  const [open, setOpen] = useState(false);\n  const [editingProduct, setEditingProduct] = useState(product);\n  const [isAllInputFull, setIsAllInputFull] = useState(true);\n\n  const onChange = useCallback(\n    (event) => {\n      const { name, value } = event.target;\n      setIsAllInputFull(true);\n\n      if (name === 'height') {\n        setEditingProduct(prev => ({\n          ...prev,\n          size: {\n            height: value,\n          },\n        }))\n      }\n\n      if (name === 'width') {\n        setEditingProduct(prev => ({\n          ...prev,\n          size: {\n            width: value,\n          },\n        }))\n      }\n      setEditingProduct(prev => ({\n        ...prev,\n        [name]: value\n      }))\n    }, []\n  )\n\n  const onSubmit = useCallback(\n    () => {\n      if (\n        editingProduct.name === undefined\n        || editingProduct.id === undefined\n        || editingProduct.imageUrl === undefined\n        || editingProduct.count === undefined\n        || editingProduct.size.width === undefined\n        || editingProduct.size.height === undefined\n        || editingProduct.weight === undefined\n      ) {\n        setIsAllInputFull(false);\n        return;\n      }\n\n      editProduct(product.id, editingProduct);\n      onEditProduct(editingProduct);\n      setEditingProduct(product);\n      setOpen(false);\n      setIsAllInputFull(true);\n    }, [editingProduct]\n  )\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button>Edit</Button>}\n    >\n      <Modal.Header>Edit</Modal.Header>\n      <Modal.Content image>\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <Form.Input\n            onChange={event => onChange(event)}\n            value={editingProduct.name}\n            name=\"name\"\n            type=\"text\"\n            label='Product name'\n            placeholder='Product name'\n          />\n          <Form.Input\n            onChange={event => onChange(event)}\n            value={editingProduct.imageUrl}\n            name=\"imageUrl\"\n            type=\"text\"\n            label='Image Url'\n            placeholder='Image Url'\n          />\n        </Form.Group>\n        <Form.Group >\n          <Form.Input\n            onChange={event => onChange(event)}\n            value={editingProduct.count}\n            name=\"count\"\n            type=\"number\"\n            label='Count'\n            placeholder='Count'\n          />\n          <Form.Input onChange={event => onChange(event)} value={editingProduct.size.width} name=\"width\" type=\"number\" label='Width' placeholder='Width' />\n        </Form.Group>\n        <Form.Group>\n          <Form.Input\n            onChange={event => onChange(event)}\n            value={editingProduct.size.height}\n            name=\"height\"\n            type=\"number\"\n            label='Height'\n            placeholder='Height'\n          />\n          <Form.Input\n            onChange={event => onChange(event)}\n            value={editingProduct.weight}\n            name=\"weight\"\n            type=\"text\"\n            label='Weight'\n            placeholder='Weight'\n          />\n        </Form.Group>\n        {!isAllInputFull && (\n          <div className=\"error\">All input are required</div>\n        )}\n        <Button type='submit'>Submit</Button>\n        <Button onClick={() => setOpen(false)} type='reset'>Cancel</Button>\n      </Form>\n      </Modal.Content>\n    </Modal>\n  )\n}\n\nEditProduct.propTypes = {\n  product: PropTypes.object,\n  onEditProduct: PropTypes.func,\n}\n","import React, { useEffect, useState, useCallback } from 'react';\nimport uniqueKey from 'unique-key';\nimport PropTypes from 'prop-types';\nimport { Icon, Card, Image } from 'semantic-ui-react';\n\nimport { productData, removeComment } from '../../api'\nimport { AddComment } from '../AddComment';\nimport { EditProduct } from '../EditProduct';\n\nexport const SelectedCard = ({ closeDescription, selectedProduct }) => {\n  const [product, setProduct] = useState(null);\n  const [comments, setComments] = useState(null);\n  \n  useEffect(async() => {\n    setProduct(await productData(selectedProduct));\n    setComments(await productData(`${selectedProduct}/comments`))\n  }, [])\n\n  const onRemove = useCallback(\n    (commentId) => {\n      setComments(prev => prev.filter(comment => comment.id !== commentId));\n    }, []\n  )\n\n  const onAddComment = (newComment) => {\n    setComments(prev => [...prev, newComment])\n  }\n\n  const onEditProduct = (edittingProduct) => {\n    setProduct(edittingProduct)\n  }\n  \n  const handlerRemove = useCallback(\n    (productId, commentId) => {\n      onRemove(commentId);\n      removeComment(productId, commentId);\n    }, []\n  )\n\n  return (\n    <>\n      {product !== null && (\n        <>\n        <div className=\"card\">\n            <Card key={uniqueKey('card')}>\n              <Image\n                key={uniqueKey('img')}\n                src={product.imageUrl}\n                alt=\"product img\"\n              />\n              <Card.Content key={uniqueKey('card-content')}>\n                <Card.Header key={uniqueKey('product-header')}>\n                  {product.name}\n                </Card.Header>\n                <Card.Meta key={uniqueKey('product-meta')}>\n                  <span key={uniqueKey('product-description')}>\n                    {`Count: ${product.count} | width: ${product.size.width} | height: ${product.size.height} | ${product.weight}`}\n                  </span>\n                </Card.Meta>\n                <h4 key={uniqueKey('comments-text')}>\n                  Comments\n                </h4>\n                {comments\n                  ? comments.map(comment => (\n                    <>\n                      <Card.Description key={uniqueKey(comment.description)}>\n                        {comment.description}\n                      </Card.Description>\n                      <button onClick={() => handlerRemove(product.id, comment.id)} key={uniqueKey('delete')} className=\"delete\">Delete</button>\n                      <hr />\n                    </>\n                  )) : ''\n                }\n              </Card.Content>\n              <Card.Content key={uniqueKey('content-extra')} extra>\n                <a key={uniqueKey('total-comments')}>\n                  <Icon/>\n                  {`Total comments: ${product.comments.length}`}\n                </a>\n              </Card.Content>\n              <AddComment\n                onAddComment={onAddComment}\n                key={uniqueKey('add-comment')}\n                productId={product.id}\n              />\n              <EditProduct\n                onEditProduct={onEditProduct}\n                product={product}\n                key={uniqueKey('add-comment')}\n                productId={product.id}\n              />\n            </Card>\n          </div>\n          <button\n            key={uniqueKey('close')}\n            className=\"close\"\n            onClick={closeDescription}\n          >\n            Close\n          </button>\n        </>\n      )}\n    </>\n  )\n}\n\nSelectedCard.propTypes = {\n  closeDescription: PropTypes.func.isRequired,\n  selectedProduct: PropTypes.string.isRequired,\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\nimport { Button, Modal } from 'semantic-ui-react';\n\nimport { remove } from './../../api';\n\nexport const ModalWindow = ({ id, onDelete }) => {\n  const [open, setOpen] = useState(false);\n  \n  const handleDelete = (id) => {\n    remove(id);\n    setOpen(false);\n    onDelete(id);\n  }\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button>Delete</Button>}\n    >\n      <Modal.Header>Delete</Modal.Header>\n      <Modal.Content image>\n        <Modal.Description>\n          <p>\n            Are you sure in your choose? \n          </p>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color='black' onClick={() => setOpen(false)}>\n          No\n        </Button>\n        <Button\n          content=\"Yes\"\n          labelPosition='right'\n          icon='archive'\n          onClick={() => handleDelete(id)}\n          positive\n        />\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nModalWindow.propTypes = {\n  id: PropTypes.string.isRequired,\n  onDelete: PropTypes.func,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Item } from 'semantic-ui-react';\nimport uniqueKey from 'unique-key';\n\nimport { ModalWindow } from './../ModalWindow';\n\nexport const ProductList = ({ product, openProduct, onDelete}) => (\n  <Item.Group key={uniqueKey(product.id)} className=\"card-container\">\n    <Item key={uniqueKey('card')} className=\"card\">\n      <Item.Image\n        key={uniqueKey(product.imageUrl)}\n        size='small'\n        src={product.imageUrl}\n      />\n      <Item.Content key={uniqueKey('item-content')}>\n        <Item.Header key={uniqueKey(product.name)}>\n          {product.name}\n        </Item.Header>\n        <Item.Meta key={uniqueKey('item-meta')}>\n          <span\n            key={uniqueKey(product.count)}\n            className='price'\n          >\n            {`Count: ${product.count} |`}\n          </span>\n          <span\n            key={uniqueKey(product.weight)}\n            className='stay'\n          >\n            {product.weight}\n          </span>\n        </Item.Meta>\n          <p\n            key={uniqueKey('comment')}\n            onClick={() => openProduct(product.id)}\n            className=\"comments\"\n            comments={product.comments}\n          >\n            Description\n          </p>\n      </Item.Content>\n      <ModalWindow onDelete={onDelete} id={product.id} />\n    </Item>\n  </Item.Group>\n)\n\nProductList.propTypes = {\n  product: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    count: PropTypes.number.isRequired,\n    weight: PropTypes.string.isRequired,\n    comments: PropTypes.array.isRequired,\n  }),\n  openProduct: PropTypes.func.isRequired,\n  onDelete: PropTypes.func,\n}\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types'\nimport uniqid from 'uniqid';\n\nimport { Modal, Form, Button } from 'semantic-ui-react';\nimport { createProduct } from './../../api';\n\nexport const AddProduct = ({ onAdd }) => {\n  const [open, setOpen] = useState(false);\n  const [newProduct, setNewProduct] = useState('');\n  const [isAllInputFull, setIsAllInputFull] = useState(true);\n\n  const onChange = useCallback(\n    (event) => {\n      const { name, value } = event.target;\n      setIsAllInputFull(true);\n\n      setNewProduct(prev => ({\n        ...prev,\n        id: uniqid('hello'),\n        [name]: value\n      }))\n    }, []\n  )\n\n  const onSubmit = useCallback(\n    () => {\n      if (\n        newProduct.name === undefined\n        || newProduct.id === undefined\n        || newProduct.imageUrl === undefined\n        || newProduct.count === undefined\n        || newProduct.width === undefined\n        || newProduct.height === undefined\n        || newProduct.weight === undefined\n      ) {\n        setIsAllInputFull(false);\n        return;\n      }\n\n      createProduct(newProduct);\n      onAdd(newProduct);\n      setNewProduct('');\n      setOpen(false);\n      setIsAllInputFull(true);\n    }, [newProduct]\n  )\n    \n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button>Add new product</Button>}\n    >\n      <Modal.Header>Create product</Modal.Header>\n      <Modal.Content image>\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <Form.Input\n            onChange={event => onChange(event)}\n            value={newProduct.name}\n            name=\"name\"\n            type=\"text\"\n            label='Product name'\n            placeholder='Product name'\n          />\n          <Form.Input\n            onChange={event => onChange(event)}\n            value={newProduct.imageUrl}\n            name=\"imageUrl\"\n            type=\"text\"\n            label='Image Url'\n            placeholder='Image Url'\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Input\n            onChange={event => onChange(event)}\n            value={newProduct.count}\n            name=\"count\"\n            type=\"number\"\n            label='Count'\n            placeholder='Count'\n          />\n          <Form.Input\n            onChange={event => onChange(event)}\n            value={newProduct.width}\n            name=\"width\"\n            type=\"number\"\n            label='Width'\n            placeholder='Width'\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Input\n            onChange={event => onChange(event)}\n            value={newProduct.height}\n            name=\"height\"\n            type=\"number\"\n            label='Height'\n            placeholder='Height'\n          />\n          <Form.Input\n            onChange={event => onChange(event)}\n            value={newProduct.weight}\n            name=\"weight\"\n            type=\"number\"\n            label='Weight'\n            placeholder='Weight'\n          />\n        </Form.Group>\n        {!isAllInputFull && (\n          <div className=\"error\">All input are required</div>\n        )}\n        <Button type='submit'>Submit</Button>\n        <Button\n          onClick={() => setOpen(false)}\n          type='reset'\n        >\n          Cancel\n        </Button>\n      </Form>\n      </Modal.Content>\n    </Modal>\n  )\n}\n\nAddProduct.propTypes = {\n  onAdd: PropTypes.func,\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport uniqueKey from 'unique-key';\n\nimport { Button } from 'semantic-ui-react';\nimport { data } from './api';\n\nimport { SelectedCard } from './components/SelectedCard';\nimport { ProductList } from './components/ProductList';\nimport { AddProduct } from './components/AddProduct';\n\nfunction App() {\n  const [productsList, setProductsList] = useState([]);\n  const [description, setDescription] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState({});\n  \n\n  useEffect(async() => {\n    setProductsList(await data())\n  }, [])\n\n  const closeDescription = useCallback(\n    () => {\n      setDescription(false);\n    }, []\n  )\n\n  const sortProducts = useCallback(\n    (option) => {\n      switch (option) {\n        case 'name':\n          setProductsList(prev => [...prev].sort((currItem, nextItem) => (\n            currItem.name.localeCompare(nextItem.name)\n          )))\n          break;\n\n        case 'count':\n          setProductsList(prev => [...prev].sort((currItem, nextItem) => (\n            currItem.count - nextItem.count\n            )))\n          break;\n      \n        default:\n          break;\n      }\n    }, []\n  )\n\n  const onDelete = useCallback(\n    (id) => {\n      setProductsList(prev => (\n        prev.filter(product => product.id !== id)\n      ))\n    }, []\n  )\n\n  const onAdd = useCallback(\n    (newProduct) => {\n      setProductsList(prev => [...prev, newProduct])\n    }, []\n  )\n\n  const openProduct = useCallback(\n    (id) => {\n      setDescription(true);\n      setSelectedProduct(id);\n    }, [],\n  )\n\n  return (\n    <>\n      <Button\n        key={uniqueKey('button-name')}\n        onClick={() => sortProducts('name')}\n      >\n        Sort by name\n      </Button>\n      <Button\n        key={uniqueKey('button-count')}\n        onClick={() => sortProducts('count')}\n      >\n        Sort by count\n      </Button>\n      <AddProduct onAdd={onAdd} />\n      <div className=\"App\">\n        {!description && productsList.map(product => (\n            <ProductList\n              key={uniqueKey('card')}\n              product={product}\n              openProduct={openProduct}\n              onDelete={onDelete}\n            />\n        ))}\n      </div>\n      {description && (\n        <SelectedCard\n          setProductsList={setProductsList}\n          key={uniqueKey(123)}\n          selectedProduct={selectedProduct}\n          closeDescription={closeDescription}\n        />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}