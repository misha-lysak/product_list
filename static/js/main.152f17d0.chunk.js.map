{"version":3,"sources":["api.js","components/AddComment/AddComment.jsx","components/EditProduct/EditProduct.jsx","components/SelectedCard/SelectedCard.jsx","components/ModalWindow/ModalWindow.jsx","components/ProductList/ProductList.jsx","components/AddProduct/AddProduct.jsx","App.jsx","index.js"],"names":["url","data","fetch","then","response","ok","Error","json","request","options","AddComment","productId","useState","open","setOpen","newComment","setNewComment","isAllInputFull","setIsAllInputFull","onChange","useCallback","event","value","target","description","id","Date","date","onSubmit","undefined","method","headers","body","JSON","stringify","createComment","console","log","Modal","onClose","onOpen","trigger","Button","Content","Form","Group","Input","text","name","type","label","placeholder","className","onClick","EditProduct","product","newProduct","setNewProduct","prev","size","height","width","imageUrl","count","weight","editProduct","Header","image","SelectedCard","closeDescription","selectedProduct","setProduct","useEffect","a","productData","handlerRemove","commentId","removeComment","Card","Image","src","alt","uniqueKey","Meta","comments","map","comment","Description","extra","Icon","length","ModalWindow","handleDelete","remove","Actions","color","content","labelPosition","icon","positive","ProductList","openProduct","Item","AddProduct","productName","createProduct","App","productsList","setProductsList","setDescription","setSelectedProduct","sortProducts","option","sort","currItem","nextItem","localeCompare","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.152f17d0.chunk.js","sourcesContent":["const url = \"https://6067460a98f405001728eaa3.mockapi.io/product-list/products\";\n\nexport const data = () => (\n  fetch(url)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`can't upload your data`);\n      }\n\n      return response.json();\n    })\n)\n\nexport const request = (url, options) => (\n  fetch(`${url}`, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`can\\n't upload your comment`);\n      }\n\n      return response.json();\n    })\n);\n\nexport const productData = (id, options) => (\n  fetch(`${url}/${id}`, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`can\\n't upload your data`);\n      }\n\n      return response.json();\n    })\n);\n\nexport const createProduct = (data) => (\n  fetch(`${url}`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      id: data.id,\n      imageUrl: data.imageUrl,\n      name: data.productName,\n      count: data.count,\n      size: {\n        height: data.height,\n        width: data.width,\n      },\n      weight: `weight ${data.weight}`,\n    }),\n  })\n    .then(response => response.json())\n);\n\nexport const editProduct = (id, data) => (\n  fetch(`${url}/${id}`, {\n    method: 'PUT',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  })\n);\n\nexport const createComment = (productId, data) => (\n  fetch(`${url}/${productId}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify(data),\n  })\n    .then(response => response.json())\n);\n\nexport const remove = id => (\n  request(`${url}/${id}`, { method: 'DELETE' })\n);\n\nexport const removeComment = (productId, id) => (\n  request(`${url}/${productId}/comments/${id}`, { method: 'DELETE' })\n);","import React, { useState, useCallback } from 'react';\nimport { Button, Modal, Form } from 'semantic-ui-react';\nimport PropTypes from 'prop-types';\n\nimport { createComment } from '../../api'\n\n\nexport const AddComment = ({ productId }) => {\n  const [open, setOpen] = useState(false);\n  const [newComment, setNewComment] = useState('');\n  const [isAllInputFull, setIsAllInputFull] = useState(true)\n\n  const onChange = useCallback(\n    (event) => {\n      const { value } = event.target;\n      setIsAllInputFull(true);\n\n      setNewComment(({\n        description: value,\n        id: +new Date(),\n        productId,\n        date: +new Date(),\n      }))\n    }, []\n  )\n\n  const onSubmit = useCallback(\n    () => {\n      if (newComment.description === undefined) {\n        setIsAllInputFull(false)\n        return\n      }\n\n      createComment(productId, newComment);\n      setNewComment('');\n      setOpen(false)\n      setIsAllInputFull(true)\n    }, [newComment, open]\n  )\n    \n    console.log(newComment);\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button>Add new comment</Button>}\n    >\n      <Modal.Content>\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <Form.Input onChange={event => onChange(event)} value={newComment.text} name=\"text\" type=\"text\" label='Comment' placeholder='Comment' />\n          {!isAllInputFull && (\n            <div className=\"error\">Write some comment</div>\n          )}\n        </Form.Group>\n        <Button type='submit'>Submit</Button>\n        <Button onClick={() => setOpen(false)} type='reset'>Cancel</Button>\n      </Form>\n      </Modal.Content>\n      \n    </Modal>\n  )\n}\n\nAddComment.propTypes = {\n  productId: PropTypes.string.isRequired,\n}\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types'\nimport { editProduct } from '../../api'\n\nimport { Modal, Form, Button } from 'semantic-ui-react';\n\nexport const EditProduct = ({ product }) => {\n  const [open, setOpen] = useState(false);\n  const [newProduct, setNewProduct] = useState(product);\n  const [isAllInputFull, setIsAllInputFull] = useState(true)\n\n  const onChange = useCallback(\n    (event) => {\n      const { name, value } = event.target;\n      setIsAllInputFull(true);\n\n      if (name === 'height') {\n        setNewProduct(prev => ({\n          ...prev,\n          size: {\n            height: value,\n          },\n        }))\n      }\n\n      if (name === 'width') {\n        setNewProduct(prev => ({\n          ...prev,\n          size: {\n            width: value,\n          },\n        }))\n      }\n      setNewProduct(prev => ({\n        ...prev,\n        [name]: value\n      }))\n    }, []\n  )\n\n  console.log(product);\n\n  const onSubmit = useCallback(\n    () => {\n      if (\n        newProduct.name === undefined\n        || newProduct.id === undefined\n        || newProduct.imageUrl === undefined\n        || newProduct.count === undefined\n        || newProduct.size.width === undefined\n        || newProduct.size.height === undefined\n        || newProduct.weight === undefined\n      ) {\n        setIsAllInputFull(false);\n        return;\n      }\n\n      editProduct(product.id, newProduct);\n      setNewProduct(product);\n      setOpen(false);\n      setIsAllInputFull(true);\n    }, [newProduct]\n  )\n    console.log('new', newProduct);\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button>Edit</Button>}\n    >\n      <Modal.Header>Edit</Modal.Header>\n      <Modal.Content image>\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <Form.Input onChange={event => onChange(event)} value={newProduct.name} name=\"name\" type=\"text\" label='Product name' placeholder='Product name' />\n          <Form.Input onChange={event => onChange(event)} value={newProduct.imageUrl} name=\"imageUrl\" type=\"text\" label='Image Url' placeholder='Image Url' />\n        </Form.Group>\n        <Form.Group >\n          <Form.Input onChange={event => onChange(event)} value={newProduct.count} name=\"count\" type=\"number\" label='Count' placeholder='Count' />\n          <Form.Input onChange={event => onChange(event)} value={newProduct.size.width} name=\"width\" type=\"number\" label='Width' placeholder='Width' />\n        </Form.Group>\n        <Form.Group>\n          <Form.Input onChange={event => onChange(event)} value={newProduct.size.height} name=\"height\" type=\"number\" label='Height' placeholder='Height' />\n          <Form.Input onChange={event => onChange(event)} value={newProduct.weight} name=\"weight\" type=\"text\" label='Weight' placeholder='Weight' />\n        </Form.Group>\n        {!isAllInputFull && (\n          <div className=\"error\">All input are required</div>\n        )}\n        <Button type='submit'>Submit</Button>\n        <Button onClick={() => setOpen(false)} type='reset'>Cancel</Button>\n      </Form>\n      </Modal.Content>\n      \n    </Modal>\n  )\n}\n\nEditProduct.propTypes = {\n  product: PropTypes.object,\n}\n","import React, { useEffect, useState } from 'react';\nimport uniqueKey from 'unique-key';\nimport PropTypes from 'prop-types';\n\nimport { productData, removeComment } from '../../api'\n\nimport { Icon, Card, Image } from 'semantic-ui-react';\nimport { AddComment } from '../AddComment';\nimport { EditProduct } from '../EditProduct';\n\nexport const SelectedCard = ({ closeDescription, selectedProduct }) => {\n  const [product, setProduct] = useState(null);\n\n  useEffect(async() => {\n    setProduct(await productData(selectedProduct))\n  }, [])\n\n  const handlerRemove = (productId, commentId) => {\n    removeComment(productId, commentId)\n  }\n\n  console.log(product);\n\n  return (\n    <>\n      {product && (\n        <>\n        <div className=\"card\">\n            <Card key={uniqueKey('card')}>\n              <Image key={uniqueKey('img')} src={product.imageUrl} alt=\"product img\" />\n              <Card.Content key={uniqueKey('card-content')}>\n                <Card.Header key={uniqueKey('product-header')}>{product.name}</Card.Header>\n                <Card.Meta key={uniqueKey('product-meta')}>\n                  <span key={uniqueKey('product-description')}>{`Count: ${product.count} | width: ${product.size.width} | height: ${product.size.height} | ${product.weight}`}</span>\n                </Card.Meta>\n                <h4 key={uniqueKey('comments-text')}>Comments</h4>\n                {product.comments ? product.comments.map(comment => (\n                  <>\n                  <Card.Description key={uniqueKey(comment.description)}>\n                    {comment.description}\n                  </Card.Description>\n                  <button onClick={() => handlerRemove(product.id, comment.id)} key={uniqueKey('delete')} className=\"delete\">Delete</button>\n                  <hr />\n                  </>\n                )) : ''}\n              </Card.Content>\n              <Card.Content key={uniqueKey('content-extra')} extra>\n                <a key={uniqueKey('total-comments')}>\n                  <Icon/>\n                  {`Total comments: ${product.comments.length}`}\n                </a>\n              </Card.Content>\n              <AddComment key={uniqueKey('add-comment')} productId={product.id} />\n              <EditProduct product={product} key={uniqueKey('add-comment')} productId={product.id} />\n            </Card>\n          </div>\n          <button key={uniqueKey('close')} className=\"close\" onClick={closeDescription}>Close</button>\n        </>\n      )}\n    </>\n  )\n}\n\nSelectedCard.propTypes = {\n  closeDescription: PropTypes.func.isRequired,\n  selectedProduct: PropTypes.string.isRequired,\n}\n\n// selectedProduct: PropTypes.shape({\n//   id: PropTypes.string.isRequired,\n//   imageUrl: PropTypes.string.isRequired,\n//   name: PropTypes.string.isRequired,\n//   count: PropTypes.string.isRequired,\n//   size: PropTypes.shape({\n//     height: PropTypes.number.isRequired,\n//     width: PropTypes.number.isRequired,\n//   }),\n//   weight: PropTypes.string.isRequired,\n//   comments: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.string.isRequired,\n//       productId: PropTypes.string.isRequired,\n//       description: PropTypes.string.isRequired,\n//       date: PropTypes.number.isRequired,  \n//     }),\n//   ),\n// })","import React, { useState } from 'react';\nimport PropTypes from 'prop-types'\n\nimport { Button, Modal } from 'semantic-ui-react';\nimport { remove } from './../../api';\n\nexport const ModalWindow = ({ id }) => {\n  const [open, setOpen] = useState(false);\n  \n  const handleDelete = () => {\n    remove(id)\n    setOpen(false)\n  }\n\n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button>Delete</Button>}\n    >\n      <Modal.Header>Delete</Modal.Header>\n      <Modal.Content image>\n        <Modal.Description>\n          <p>\n            Are you sure in your choose? \n          </p>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color='black' onClick={() => setOpen(false)}>\n          No\n        </Button>\n        <Button\n          content=\"Yes\"\n          labelPosition='right'\n          icon='archive'\n          onClick={() => handleDelete()}\n          positive\n        />\n      </Modal.Actions>\n    </Modal>\n  )\n}\n\nModalWindow.propTypes = {\n  id: PropTypes.string.isRequired,\n}\n","import React from 'react';\nimport { ModalWindow } from './../ModalWindow';\nimport { Item } from 'semantic-ui-react';\nimport uniqueKey from 'unique-key';\nimport PropTypes from 'prop-types';\n\nexport const ProductList = ({ product, openProduct}) => {\n\n  return (\n    <Item.Group key={uniqueKey(product.id)} className=\"card-container\">\n      <Item key={uniqueKey('card')} className=\"card\">\n        <Item.Image key={uniqueKey(product.imageUrl)} size='small' src={product.imageUrl} />\n        <Item.Content key={uniqueKey('item-content')}>\n          <Item.Header key={uniqueKey(product.name)}>{product.name}</Item.Header>\n          <Item.Meta key={uniqueKey('item-meta')}>\n            <span key={uniqueKey(product.count)} className='price'>{`Count: ${product.count} |`}</span>\n            <span key={uniqueKey(product.weight)} className='stay'>{product.weight}</span>\n          </Item.Meta>\n            <p key={uniqueKey('comment')} onClick={() => openProduct(product.id)} className=\"comments\" comments={product.comments}>Description</p>\n        </Item.Content>\n        <ModalWindow id={product.id} />\n      </Item>\n    </Item.Group>\n  )\n}\n\nProductList.propTypes = {\n  product: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    imageUrl: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    count: PropTypes.string.isRequired,\n    weight: PropTypes.string.isRequired,\n    comments: PropTypes.array.isRequired,\n  }),\n  openProduct: PropTypes.func.isRequired,\n}\n","import React, { useState, useCallback } from 'react';\nimport { Modal, Form, Button } from 'semantic-ui-react';\nimport { createProduct } from './../../api'\n\nexport const AddProduct = () => {\n  const [open, setOpen] = useState(false);\n  const [newProduct, setNewProduct] = useState('');\n  const [isAllInputFull, setIsAllInputFull] = useState(true);\n\n  const onChange = useCallback(\n    (event) => {\n      const { name, value } = event.target;\n      setIsAllInputFull(true);\n\n      setNewProduct(prev => ({\n        ...prev,\n        id: +new Date(),\n        [name]: value\n      }))\n    }, []\n  )\n\n  const onSubmit = useCallback(\n    () => {\n      if (\n        newProduct.productName === undefined\n        || newProduct.id === undefined\n        || newProduct.imageUrl === undefined\n        || newProduct.count === undefined\n        || newProduct.width === undefined\n        || newProduct.height === undefined\n        || newProduct.weight === undefined\n      ) {\n        setIsAllInputFull(false);\n        return;\n      }\n\n      createProduct(newProduct);\n      setNewProduct('');\n      setOpen(false);\n      setIsAllInputFull(true);\n    }, [newProduct]\n  )\n    \n  return (\n    <Modal\n      onClose={() => setOpen(false)}\n      onOpen={() => setOpen(true)}\n      open={open}\n      trigger={<Button>Add new product</Button>}\n    >\n      <Modal.Header>Create product</Modal.Header>\n      <Modal.Content image>\n      <Form onSubmit={onSubmit}>\n        <Form.Group>\n          <Form.Input onChange={event => onChange(event)} value={newProduct.productName} name=\"productName\" type=\"text\" label='Product name' placeholder='Product name' />\n          <Form.Input onChange={event => onChange(event)} value={newProduct.imageUrl} name=\"imageUrl\" type=\"text\" label='Image Url' placeholder='Image Url' />\n        </Form.Group>\n        <Form.Group >\n          <Form.Input onChange={event => onChange(event)} value={newProduct.count} name=\"count\" type=\"number\" label='Count' placeholder='Count' />\n          <Form.Input onChange={event => onChange(event)} value={newProduct.width} name=\"width\" type=\"number\" label='Width' placeholder='Width' />\n        </Form.Group>\n        <Form.Group>\n          <Form.Input onChange={event => onChange(event)} value={newProduct.height} name=\"height\" type=\"number\" label='Height' placeholder='Height' />\n          <Form.Input onChange={event => onChange(event)} value={newProduct.weight} name=\"weight\" type=\"number\" label='Weight' placeholder='Weight' />\n        </Form.Group>\n        {!isAllInputFull && (\n          <div className=\"error\">All input are required</div>\n        )}\n        <Button type='submit'>Submit</Button>\n        <Button onClick={() => setOpen(false)} type='reset'>Cancel</Button>\n      </Form>\n      </Modal.Content>\n      \n    </Modal>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { data } from './api';\nimport './App.css';\n\nimport 'semantic-ui-css/semantic.min.css';\nimport { Button } from 'semantic-ui-react';\nimport uniqueKey from 'unique-key';\n\nimport { SelectedCard } from './components/SelectedCard';\nimport { ProductList } from './components/ProductList';\nimport { AddProduct } from './components/AddProduct';\n\nfunction App() {\n  const [productsList, setProductsList] = useState([]);\n  const [description, setDescription] = useState(false);\n  const [selectedProduct, setSelectedProduct] = useState({});\n  \n\n  useEffect(async() => {\n    setProductsList(await data())\n  }, [data])\n\n  const closeDescription = useCallback(\n    () => {\n      setDescription(false);\n    }, []\n  )\n\n  const sortProducts = useCallback(\n    (option) => {\n      switch (option) {\n        case 'name':\n          setProductsList(prev => [...prev].sort((currItem, nextItem) => (\n            currItem.name.localeCompare(nextItem.name)\n          )))\n          break;\n\n        case 'count':\n          setProductsList(prev => [...prev].sort((currItem, nextItem) => (\n            currItem.count - nextItem.count\n            )))\n          break;\n      \n        default:\n          break;\n      }\n    }, []\n  )\n\n  const openProduct = useCallback(\n    (id) => {\n      setDescription(true);\n      setSelectedProduct(id);\n    }, [],\n  )\n\n  return (\n    <>\n      <Button key={uniqueKey('button-name')} onClick={() => sortProducts('name')}>Sort by name</Button>\n      <Button key={uniqueKey('button-count')} onClick={() => sortProducts('count')}>Sort by count</Button>\n      <AddProduct />\n      <div className=\"App\">\n        {!description && productsList.map(product => (\n            <ProductList\n              key={uniqueKey('card')}\n              product={product}\n              openProduct={openProduct}\n            />\n        ))}\n      </div>\n      {description && (\n        <SelectedCard\n          key={uniqueKey(123)}\n          selectedProduct={selectedProduct}\n          closeDescription={closeDescription}\n        />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}